openapi: 3.0.1
info:
  title: api-feedbacksettings
  contact: {}
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: '@project.version@'
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: FeedbackSettings
  description: Feedback settings
paths:
  /settings:
    get:
      tags:
      - FeedbackSettings
      summary: Query feedback settings
      description: |
        Query for feedback settings matching sent in person- and/or organizationId. Returned feedback settings contains a matching percent, which is
        100% if request is not extended with filters (i.e. without filters, all returned posts matches incoming parameters to 100%).<br><br>

        If needed, the client can extend the request to include filters. When filters are present they will be taken into account and matched against
        the  filters on the returned feedback settings when calculating matching percent. All posts matching sent in person- and/or organizationId will
        still be returned, but with a calculated matching percent that is based on how filters for the feedback settings posts matches sent in filters.
        <br><br>

        Filters are sent as header values. The convention of the header name is <code>x-filter-[filterkey]</code>. It is possible to include multiple values
        for a filter by sending multiple headers with same filter name and different values for each entry, see example below.<br><br>

        <pre>
        -H 'x-filter-categories: broadband'
        -H 'x-filter-categories: electricity'</pre>
      operationId: getFeedbackSettingsByQuery
      parameters:
      - name: personId
        in: query
        description: Person id
        required: false
        schema:
          type: string
        example: 15aee472-46ab-4f03-9605-68bd64ebc71a
      - name: organizationId
        in: query
        description: Organization id
        required: false
        schema:
          type: string
        example: 15aee472-46ab-4f03-9605-68bd64ebc84a
      - name: page
        in: query
        description: Page number
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
        example: 1
      - name: limit
        in: query
        description: Result size per page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 20
        example: 20
      responses:
        "500":
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Problem'
                - $ref: '#/components/schemas/ConstraintViolationProblem'
            application/problem+json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Problem'
                - $ref: '#/components/schemas/ConstraintViolationProblem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/SearchResult'
    post:
      tags:
      - FeedbackSettings
      summary: Create feedback setting
      operationId: createFeedbackSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedbackSettingRequest'
        required: true
      responses:
        "201":
          description: Successful operation
          headers:
            Location:
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackSetting'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/FeedbackSetting'
        "500":
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Problem'
                - $ref: '#/components/schemas/ConstraintViolationProblem'
            application/problem+json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Problem'
                - $ref: '#/components/schemas/ConstraintViolationProblem'
  /settings/{id}:
    get:
      tags:
      - FeedbackSettings
      summary: Get feedback setting by ID
      operationId: getFeedbackSettingById
      parameters:
      - name: id
        in: path
        description: Feedback setting ID
        required: true
        schema:
          type: string
        example: 81471222-5798-11e9-ae24-57fa13b361e1
      responses:
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackSetting'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/FeedbackSetting'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Problem'
                - $ref: '#/components/schemas/ConstraintViolationProblem'
            application/problem+json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Problem'
                - $ref: '#/components/schemas/ConstraintViolationProblem'
    delete:
      tags:
      - FeedbackSettings
      summary: Delete feedback setting
      operationId: deleteFeedbackSetting
      parameters:
      - name: id
        in: path
        description: Feedback setting ID
        required: true
        schema:
          type: string
        example: 81471222-5798-11e9-ae24-57fa13b361e1
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "204":
          description: Successful operation
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Problem'
                - $ref: '#/components/schemas/ConstraintViolationProblem'
    patch:
      tags:
      - FeedbackSettings
      summary: Update feedback setting
      operationId: updateFeedbackSetting
      parameters:
      - name: id
        in: path
        description: Feedback setting ID
        required: true
        schema:
          type: string
        example: 81471222-5798-11e9-ae24-57fa13b361e1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedbackSettingRequest'
        required: true
      responses:
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackSetting'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/FeedbackSetting'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Problem'
                - $ref: '#/components/schemas/ConstraintViolationProblem'
            application/problem+json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Problem'
                - $ref: '#/components/schemas/ConstraintViolationProblem'
  /api-docs:
    get:
      tags:
      - API
      summary: OpenAPI
      operationId: getApiDocs
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: string
      x-auth-type: None
      x-throttling-tier: Unlimited
      x-wso2-mutual-ssl: Optional
components:
  schemas:
    CreateFeedbackSettingRequest:
      type: object
      properties:
        personId:
          type: string
          description: Unique id for the person to whom the feedback setting shall
            apply
          example: 15aee472-46ab-4f03-9605-68bd64ebc73f
        organizationId:
          type: string
          description: Unique id for the company to which the feedback setting shall
            apply if the setting refers to an organizational representative
          example: 15aee472-46ab-4f03-9605-68bd64ebc84a
        filters:
          type: array
          items:
            $ref: '#/components/schemas/RequestedFeedbackFilter'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/RequestedFeedbackChannel'
      description: Request model for creating a new feedback setting
    RequestedFeedbackChannel:
      required:
      - contactMethod
      - destination
      - sendFeedback
      type: object
      properties:
        contactMethod:
          type: string
          description: Method of contact
          example: SMS
          enum:
          - SMS
          - EMAIL
        destination:
          type: string
          description: Point of destination
          example: "0701234567"
        sendFeedback:
          type: boolean
          description: 'Signal if channel should be used or not when sending feedback '
          example: true
      description: Requested feedback channel model
    RequestedFeedbackFilter:
      required:
      - key
      - values
      type: object
      properties:
        key:
          type: string
          description: Unique key for the filter
          example: categories
        values:
          uniqueItems: true
          type: array
          items:
            type: string
      description: Requested feedback filter model
    FeedbackChannel:
      type: object
      properties:
        contactMethod:
          type: string
          description: Method of contact
          readOnly: true
          example: SMS
          enum:
          - SMS
          - EMAIL
        destination:
          type: string
          description: Point of destination
          readOnly: true
        sendFeedback:
          type: boolean
          description: Signal if channel should be used or not when sending feedback
          readOnly: true
          example: true
      description: Feedback channel model
      readOnly: true
    FeedbackFilter:
      type: object
      properties:
        key:
          type: string
          description: Unique key for the filter
          example: categories
        values:
          type: array
          items:
            type: string
      description: Feedback filter model
      readOnly: true
    FeedbackSetting:
      type: object
      properties:
        id:
          type: string
          description: Unique id for the feedback setting
          readOnly: true
          example: 0d64c132-3aea-11ec-8d3d-0242ac130003
        personId:
          type: string
          description: Unique id for the person to whom the feedback setting applies
          readOnly: true
          example: 15aee472-46ab-4f03-9605-68bd64ebc73f
        organizationId:
          type: string
          description: Unique id for the company to which the feedback setting applies
            in cases where the setting refers to an organizational representative
          readOnly: true
          example: 15aee472-46ab-4f03-9605-68bd64ebc84a
        filters:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FeedbackFilter'
        channels:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FeedbackChannel'
        created:
          type: string
          description: Timestamp for creation
          format: date-time
          readOnly: true
          example: 2022-01-20T10:30:09.469+01:00
        modified:
          type: string
          description: Timestamp for last modification
          format: date-time
          readOnly: true
          example: 2022-01-20T10:30:09.469+01:00
      description: Feedback setting model
    Problem:
      type: object
      properties:
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: '#/components/schemas/StatusType'
        title:
          type: string
        detail:
          type: string
    StatusType:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    ConstraintViolationProblem:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/ThrowableProblem'
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              nativeMethod:
                type: boolean
              className:
                type: string
        type:
          type: string
          format: uri
        status:
          $ref: '#/components/schemas/StatusType'
        violations:
          type: array
          items:
            $ref: '#/components/schemas/Violation'
        title:
          type: string
        message:
          type: string
        instance:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              cause:
                type: object
                properties:
                  stackTrace:
                    type: array
                    items:
                      type: object
                      properties:
                        classLoaderName:
                          type: string
                        moduleName:
                          type: string
                        moduleVersion:
                          type: string
                        methodName:
                          type: string
                        fileName:
                          type: string
                        lineNumber:
                          type: integer
                          format: int32
                        nativeMethod:
                          type: boolean
                        className:
                          type: string
                  message:
                    type: string
                  localizedMessage:
                    type: string
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    nativeMethod:
                      type: boolean
                    className:
                      type: string
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    ThrowableProblem:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/ThrowableProblem'
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              nativeMethod:
                type: boolean
              className:
                type: string
        message:
          type: string
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: '#/components/schemas/StatusType'
        title:
          type: string
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              cause:
                type: object
                properties:
                  stackTrace:
                    type: array
                    items:
                      type: object
                      properties:
                        classLoaderName:
                          type: string
                        moduleName:
                          type: string
                        moduleVersion:
                          type: string
                        methodName:
                          type: string
                        fileName:
                          type: string
                        lineNumber:
                          type: integer
                          format: int32
                        nativeMethod:
                          type: boolean
                        className:
                          type: string
                  message:
                    type: string
                  localizedMessage:
                    type: string
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    nativeMethod:
                      type: boolean
                    className:
                      type: string
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    Violation:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    UpdateFeedbackSettingRequest:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: '#/components/schemas/RequestedFeedbackChannel'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/RequestedFeedbackFilter'
      description: Request model for updating a feedback setting
    MetaData:
      type: object
      properties:
        page:
          type: integer
          description: Current page
          format: int32
          readOnly: true
          example: 5
        limit:
          type: integer
          description: Displayed objects per page
          format: int32
          readOnly: true
          example: 20
        count:
          type: integer
          description: Displayed objects on current page
          format: int32
          readOnly: true
          example: 13
        totalRecords:
          type: integer
          description: Total amount of hits based on provided search parameters
          format: int64
          readOnly: true
          example: 98
        totalPages:
          type: integer
          description: Total amount of pages based on provided search parameters
          format: int32
          readOnly: true
          example: 23
      description: Metadata model
    SearchResult:
      type: object
      properties:
        feedbackSettings:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/WeightedFeedbackSetting'
        _meta:
          $ref: '#/components/schemas/MetaData'
      description: Search result model
    WeightedFeedbackSetting:
      type: object
      properties:
        id:
          type: string
          description: Unique id for the feedback setting
          readOnly: true
          example: 0d64c132-3aea-11ec-8d3d-0242ac130003
        personId:
          type: string
          description: Unique id for the person to whom the feedback setting applies
          readOnly: true
          example: 15aee472-46ab-4f03-9605-68bd64ebc73f
        organizationId:
          type: string
          description: Unique id for the company to which the feedback setting applies
            in cases where the setting refers to an organizational representative
          readOnly: true
          example: 15aee472-46ab-4f03-9605-68bd64ebc84a
        filters:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FeedbackFilter'
        channels:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FeedbackChannel'
        created:
          type: string
          description: Timestamp for creation
          format: date-time
          readOnly: true
          example: 2022-01-20T10:30:09.469+01:00
        modified:
          type: string
          description: Timestamp for last modification
          format: date-time
          readOnly: true
          example: 2022-01-20T10:30:09.469+01:00
        matchingPercent:
          type: integer
          description: Percentual match compared to filters in request
          format: int32
          readOnly: true
          example: 37
      description: Weighted feedback setting model
      readOnly: true
  securitySchemes: {}
